server {
  listen 80;
  listen [::]:80;
  server_name www.example.com;

  return 301 https://$host$request_uri;
}
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name www.example.com;
  http2 on;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  ssl_certificate /path/to/your/certificate.pem;
  ssl_certificate_key /path/to/your/hblogs/web/privatekey.pem;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ecdh_curve X25519:prime256v1:secp384r1;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
  ssl_prefer_server_ciphers off;

  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;

  ssl_dhparam "/path/to/your/dhparam";

  ssl_stapling on;
  ssl_stapling_verify on;

  ssl_trusted_certificate  /path/to/your/certificate.pem;

  resolver 8.8.8.8 1.1.1.1 valid=300s;
  resolver_timeout 5s;

  add_header Strict-Transport-Security "max-age=63072000" always;

  error_log  /path/to/your/error.log;
  access_log  /path/to/your/access.log;

  location / {
    proxy_pass http://127.0.0.1:3000;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
  }
}


